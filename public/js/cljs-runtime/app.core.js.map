{"version":3,"sources":["app/core.cljs"],"mappings":"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","names":["re_frame.core.reg_event_db","_","re_frame.core.reg_event_fx","p__29923","vec__29924","cljs.core.nth","db","route","p__29927","vec__29928","new-match","cljs.core.assoc","re_frame.core.reg_sub","re-frame.core/reg-fx","k","params","query","reitit.frontend.easy.push_state","var_args","G__29932","app.core/href","js/Error","app.core.href","reitit.frontend.easy.href","app.core/home-page","re-frame.core/dispatch","js/console.log","app.core/contacts-page","app.core/routes","app.core/on-navigate","old-match","re_frame.core.subscribe","cs","reitit.frontend.controllers/apply-controllers","cljs.core/deref","m","app.core/router","reitit.frontend.router","reitit.coercion.spec/coercion","app.core/init-routes!","reitit.frontend.easy/start!","p__29933","map__29934","cljs.core/--destructure-map","cljs.core.get","app.core/nav","router","current-route","cljs.core.into","iter__4652__auto__","s__29936","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__29938","cljs.core/chunk-buffer","i__29937","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__29935","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","route-name","reitit.core/route-names","reitit.core/match-by-name","text","cljs.core._EQ_","p__29939","map__29940","app.core/router-component","p__29941","vec__29942","msg","app.core/mount-root","re-frame.core/clear-subscription-cache!","reagent.dom.render","js/document","app.core/init","re-frame.core/dispatch-sync","cljs.core/chunk-first"],"sourcesContent":["(ns app.core\n  (:require [reagent.dom :as reagent]\n            [re-frame.core :as re-frame]\n            [reitit.core :as r]\n            [reitit.coercion :as rc]\n            [reitit.coercion.spec :as rss]\n            [reitit.frontend :as rf]\n            [reitit.frontend.controllers :as rfc]\n            [reitit.frontend.easy :as rfe]))\n\n(re-frame.core/reg-event-db\n ::initialize-db\n (fn [_ _]\n   {:current-route nil}))\n\n(re-frame.core/reg-event-fx\n ::navigate\n (fn [db [_ route]]\n   {::navigate! route}))\n\n(re-frame.core/reg-event-db\n ::navigated\n (fn [db [_ new-match]]\n   (assoc db :current-route new-match)))\n\n(re-frame.core/reg-sub\n ::current-route\n (fn [db]\n   (:current-route db)))\n\n(re-frame.core/reg-fx\n ::navigate!\n (fn [k params query]\n   (rfe/push-state k params query)))\n\n(defn href\n  ([k]\n   (href k nil nil))\n  ([k params]\n   (href k params nil))\n  ([k params query]\n   (rfe/href k params query)))\n\n(defn home-page []\n  [:div\n   [:h1 \"Hello from CLJS\"]\n   [:button\n    {:on-click #(re-frame.core/dispatch [:console-me \"the very front\"])}\n    \"Click me\"]\n   (js/console.log (href ::contacts))\n   [:a {:href (href ::contacts)} \"Got to contacts\"]])\n\n(defn contacts-page []\n  [:div\n   [:h1 \"Contacts\"]\n   [:button\n    {:on-click #(re-frame.core/dispatch [:console-me \"from the contacts\"])}\n    \"Click me\"]])\n\n(def routes\n  [\"/\"\n   [\"\"\n    {:name      ::home\n     :view      home-page\n     :link-text \"Home\"\n     :controllers\n     [{:start (fn [& params](js/console.log \"Entering home page\"))\n       :stop  (fn [& params] (js/console.log \"Leaving home page\"))}]}]\n    [\"contacts\"\n    {:name      ::contacts\n     :view      contacts-page\n     :link-text \"Sub page 1\"\n     :controllers\n     [{:start (fn [& params] (js/console.log \"Entering sub-page 1\"))\n       :stop  (fn [& params] (js/console.log \"Leaving sub-page 1\"))}]}]])\n\n(defn on-navigate [new-match]\n  (let [old-match (re-frame/subscribe [::current-route])]\n    (when new-match\n      (let [cs (rfc/apply-controllers (:controllers @old-match) new-match)\n            m  (assoc new-match :controllers cs)]\n        (re-frame/dispatch [::navigated m])))))\n\n(def router\n  (rf/router\n   routes\n   {:data {:coercion rss/coercion}}))\n\n(defn init-routes! []\n  (js/console.log \"initializing routes\")\n  (rfe/start!\n   router\n   on-navigate\n   {:use-fragment false}))\n\n(defn nav [{:keys [router current-route]}]\n  (into\n   [:ul]\n   (for [route-name (r/route-names router)\n         :let       [route (r/match-by-name router route-name)\n                     text (-> route :data :link-text)]]\n     [:li\n      (when (= route-name (-> current-route :data :name))\n        \"> \")\n      ;; Create a normal links that user can click\n      [:a {:href (href route-name)} text]])))\n\n(defn router-component [{:keys [router]}]\n  (let [current-route @(re-frame/subscribe [::current-route])]\n    [:div\n     [nav {:router router :current-route current-route}]\n     (when current-route\n       [(-> current-route :data :view)])]))\n\n(re-frame.core/reg-event-fx\n :console-me\n (fn [_ [_ msg]] (js/console.log msg)))\n\n(defn mount-root []\n  (re-frame/clear-subscription-cache!)\n  (init-routes!)\n  (reagent/render [router-component {:router router}]\n                  (.getElementById js/document \"root\")))\n\n(defn ^:export init []\n  (re-frame/dispatch-sync [::initialize-db])\n  (mount-root))\n"]}